{"version":3,"sources":["AppComponents/HeaderComponent/Header.js","AppComponents/FooterComponent/Footer.js","AppComponents/TraitRating/TraitRating.js","AppComponents/SurveyComponents/SurveyComponent.js","AppComponents/MainLanding/MainLanding.js","AppComponents/UploadTraits/UploadTraits.js","AppComponents/UploadCandidates/UploadCandidates.js","AppComponents/ManageSurvey/ManageSurvey.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","to","id","Footer","style","position","top","width","TraitRating","props","collectRating","rating","traitName","ratingData","traitRating","addRatingsData","state","traitNameStyle","traitNameLabel","traitData","Traits","replace","this","Definition","type","name","htmlFor","onClick","Component","SurveyComponent","setRatingsData","ratingsData","console","log","useState","useEffect","localStorage","setItem","JSON","stringify","action","padding","role","placeholder","TraitData","map","trait","collectTraitRating","ID","MainLanding","UploadTraits","selectedFile","traitsData","traitTable","readFile","bind","tableContent","uploadBtnClick","evt","f","target","files","reader","FileReader","onload","bstr","result","wb","XLSX","wsname","SheetNames","ws","Sheets","data","sheet_to_json","readAsBinaryString","e","preventDefault","alert","setState","accept","onChange","uploadTraits","scope","length","colSpan","__rowNum__","UploadCandidates","ManageSurvey","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abdffe7b.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport const Header = () => {\r\n\r\n  \r\n    \r\n\r\n    return (\r\n      // <nav className=\"navbar navbar-dark bg-primary text-center\">\r\n      //   {/* <img src=\"https://upload.wikimedia.org/wikipedia/commons/b/b9/EXL_Logo_RGB.jpg\" style={imgStyle} alt=\"\" /> */}\r\n      //   <Link className=\"navbar-brand p-3\" to=\"/\">EXL 360° Survey</Link>\r\n        \r\n      //   <ul className=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n      //     <li className=\"nav-item  m-2\">\r\n      //       <Link className=\"nav-link text-white\" to='/adminPanel'>\r\n      //         Admin Panel \r\n      //       </Link>\r\n      //     </li>\r\n      //   </ul>\r\n      // </nav>\r\n      <>\r\n      <nav className=\"navbar navbar-default py-5\">\r\n</nav>\r\n      <nav className=\"navbar fixed-top navbar-expand-lg navbar-light bg-primary \">\r\n  <Link className=\"navbar-brand text-white px-3\" to=\"/\">EXL 360° Survey</Link>\r\n  {/* <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span className=\"navbar-toggler-icon\"></span>\r\n  </button> */}\r\n\r\n  <div className=\"\" id=\"navbarSupportedContent\">\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item active\">\r\n        <Link className=\"nav-link text-white\" to='/uploadTraits'>Upload Traits</Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link text-white\" to='/uploadCandidates'>Upload Candidates</Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link text-white\" to='/manageSurvey'>Manage Survey</Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link text-white\" to=\"/collectSurvey\">Participate In Survey</Link>\r\n      </li>\r\n      {/* <li className=\"nav-item dropdown\">\r\n        <a className=\"nav-link dropdown-toggle text-white\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Dropdown\r\n        </a>\r\n        <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n          <a className=\"dropdown-item text-white\" href=\"#\">Action</a>\r\n          <a className=\"dropdown-item text-white\" href=\"#\">Another action</a>\r\n          <div className=\"dropdown-divider\"></div>\r\n          <a className=\"dropdown-item text-white\" href=\"#\">Something else here</a>\r\n        </div>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <a className=\"nav-link disabled text-white\" href=\"#\">Disabled</a>\r\n      </li> */}\r\n    </ul>\r\n    \r\n  </div>\r\n</nav>\r\n      </>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    let footerStyle = {\r\n        position: \"relative\",\r\n        top: \"100vh\",\r\n        width: \"100%\"\r\n    }\r\n    return (\r\n        <footer className=\"bg-dark text-light py-2\" style={footerStyle}>\r\n            <p className=\"text-center\">\r\n            Copyright &copy; www.EXL.com\r\n            </p>            \r\n        </footer>\r\n    )\r\n}\r\n","import React ,{ Component } from 'react'\r\nimport './TraitRatingStyle.css'\r\n\r\n\r\n// export const TraitRating = (props) => {\r\n\r\n      \r\n//      const  onRadioChange = (e) => {\r\n//         this.setState({\r\n//           color: e.target.value\r\n//         });\r\n//       }\r\n\r\n//     return (\r\n//         <>\r\n//           <div className=\"card mb-3\" >\r\n//           <div className=\"card-body \">\r\n//             <h5 className=\"card-title\"> <strong>{props.traitData.Traits}</strong> </h5>            \r\n//             <p className=\"card-text align-items-center d-flex\" style={traitNameStyle}>\r\n//             {props.traitData.Definition}\r\n//             </p>\r\n//             <div className=\"box\">    \r\n//                 <div className=\"rating\">\r\n//                 <input type=\"radio\" name={props.traitData.Traits+\"-rating\"} id={props.traitData.Traits+\"rate10\"}/><label htmlFor={props.traitData.Traits+\"rate10\"}>10</label>\r\n//                 <input type=\"radio\" name={props.traitData.Traits+\"-rating\"} id={props.traitData.Traits+\"rate9\"}/><label htmlFor={props.traitData.Traits+\"rate9\"}>9</label>\r\n//                 <input type=\"radio\" name={props.traitData.Traits+\"-rating\"} id={props.traitData.Traits+\"rate8\"}/><label htmlFor={props.traitData.Traits+\"rate8\"}>8</label>\r\n//                 <input type=\"radio\" name={props.traitData.Traits+\"-rating\"} id={props.traitData.Traits+\"rate7\"}/><label htmlFor={props.traitData.Traits+\"rate7\"}>7</label>\r\n//                 <input type=\"radio\" name={props.traitData.Traits+\"-rating\"} id={props.traitData.Traits+\"rate6\"}/><label htmlFor={props.traitData.Traits+\"rate6\"}>6</label>\r\n//                 <input type=\"radio\" name={props.traitData.Traits+\"-rating\"} id={props.traitData.Traits+\"rate5\"}/><label htmlFor={props.traitData.Traits+\"rate5\"}>5</label>\r\n//                 <input type=\"radio\" name={props.traitData.Traits+\"-rating\"} id={props.traitData.Traits+\"rate4\"}/><label htmlFor={props.traitData.Traits+\"rate4\"}>4</label>\r\n//                 <input type=\"radio\" name={props.traitData.Traits+\"-rating\"} id={props.traitData.Traits+\"rate3\"}/><label htmlFor={props.traitData.Traits+\"rate3\"}>3</label>\r\n//                 <input type=\"radio\" name={props.traitData.Traits+\"-rating\"} id={props.traitData.Traits+\"rate2\"}/><label htmlFor={props.traitData.Traits+\"rate2\"}>2</label>\r\n//                 <input type=\"radio\" name={props.traitData.Traits+\"-rating\"} id={props.traitData.Traits+\"rate1\"}/><label htmlFor={props.traitData.Traits+\"rate1\"}>1</label>\r\n//                 </div>\r\n//             </div>\r\n//           </div>\r\n          \r\n//         </div>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n\r\n\r\n\r\nclass TraitRating extends Component {\r\n\r\n  constructor(props) {\r\n    super();\r\n    this.state = {};\r\n    this.traitNameStyle={\r\n      'textAlign': 'justify',\r\n      'textJustify': 'inter-word'\r\n    }\r\n    this.traitNameLabel = props.traitData.Traits\r\n    this.traitName = this.traitNameLabel.replace(/ /g,'')\r\n    this.props = props\r\n  }\r\n  \r\n\r\n  collectRating = (rating,traitName)=>{\r\n    const ratingData = {\r\n      traitName:traitName,\r\n      traitRating:rating\r\n    }    \r\n    this.props.addRatingsData(ratingData)    \r\n  }\r\n\r\n      \r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"card mb-3\">\r\n          <div className=\"card-body \">\r\n            <h5 className=\"card-title\">\r\n              {\" \"}\r\n              <strong>{this.traitNameLabel}</strong>\r\n              {\" \"}\r\n            </h5>\r\n            <p\r\n              className=\"card-text align-items-center d-flex\"\r\n              style={this.traitNameStyle}\r\n            >\r\n              {this.props.traitData.Definition}\r\n            </p>\r\n            <div className=\"box\">\r\n              <div className=\"rating\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name={this.traitName + \"-rating\"}\r\n                  id={this.traitName + \"rate10\"}\r\n                  \r\n                />\r\n                <label htmlFor={this.traitName + \"rate10\"} onClick={ ()=>{this.collectRating(10,this.traitNameLabel)} }>\r\n                  10\r\n                </label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={this.traitName + \"-rating\"}\r\n                  id={this.traitName + \"rate9\"}\r\n                  \r\n                />\r\n                <label htmlFor={this.traitName + \"rate9\"} onClick={ ()=>{this.collectRating(9,this.traitNameLabel)} }>9</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={this.traitName + \"-rating\"}\r\n                  id={this.traitName + \"rate8\"}\r\n                  \r\n                />\r\n                <label htmlFor={this.traitName + \"rate8\"} onClick={ ()=>{this.collectRating(8,this.traitNameLabel)} }>8</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={this.traitName + \"-rating\"}\r\n                  id={this.traitName + \"rate7\"}\r\n                  \r\n                />\r\n                <label htmlFor={this.traitName + \"rate7\"} onClick={ ()=>{this.collectRating(7,this.traitNameLabel)} }>7</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={this.traitName + \"-rating\"}\r\n                  id={this.traitName + \"rate6\"}\r\n                  \r\n                />\r\n                <label htmlFor={this.traitName + \"rate6\"} onClick={ ()=>{this.collectRating(6,this.traitNameLabel)} }>6</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={this.traitName + \"-rating\"}\r\n                  id={this.traitName + \"rate5\"}\r\n                  \r\n                />\r\n                <label htmlFor={this.traitName + \"rate5\"} onClick={ ()=>{this.collectRating(5,this.traitNameLabel)} }>5</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={this.traitName + \"-rating\"}\r\n                  id={this.traitName + \"rate4\"}                  \r\n                  \r\n                />\r\n                <label htmlFor={this.traitName + \"rate4\"} onClick={ ()=>{this.collectRating(4,this.traitNameLabel)} }>4</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={this.traitName + \"-rating\"}\r\n                  id={this.traitName + \"rate3\"}                  \r\n                  \r\n                />\r\n                <label htmlFor={this.traitName + \"rate3\"} onClick={ ()=>{this.collectRating(3,this.traitNameLabel)} }>3</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={this.traitName + \"-rating\"}\r\n                  id={this.traitName + \"rate2\"}\r\n                  \r\n                />\r\n                <label htmlFor={this.traitName + \"rate2\"} onClick={ ()=>{this.collectRating(2,this.traitNameLabel)} }>2</label>\r\n                <input\r\n                  type=\"radio\"\r\n                  name={this.traitName + \"-rating\"}\r\n                  id={this.traitName + \"rate1\"}\r\n                  \r\n                />\r\n                <label htmlFor={this.traitName + \"rate1\"} onClick={ ()=>{this.collectRating(1,this.traitNameLabel)} }>1</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TraitRating;\r\n\r\n\r\n","import React,{useState,useEffect} from 'react'\r\nimport  TraitRating  from '../TraitRating/TraitRating'\r\nimport TraitData from '../TraitRating/TraitData.json'\r\nimport './SurveyComponent.css'\r\n\r\nexport const SurveyComponent = (props) => {\r\n    let formStyle = {\r\n        width:\"55%\",\r\n        padding:\"50px\"\r\n    }\r\n    // console.log(screen.width)    \r\n    \r\n    const addRatingsData=(ratingData)=>{      \r\n      setRatingsData([...ratingsData,ratingData])\r\n      console.log(ratingsData)\r\n      // useEffect(()=>console.log(ratingsData),ratingsData)\r\n    }\r\n    const [ratingsData, setRatingsData] = useState([])\r\n    useEffect(() => {\r\n      localStorage.setItem(\"ratingsData\", JSON.stringify(ratingsData));\r\n      \r\n    }, [ratingsData])\r\n    return (\r\n      <form action=\"POST\">\r\n        \r\n      <div className=\"container form\" style={formStyle}>\r\n      <div className=\"alert alert-primary\" role=\"alert\">\r\n          <strong>Mr. Jhon</strong> is working as a salesman in EXL. Please Spare sometimes to rate him on this traits.\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"empName\" className=\"form-label\">\r\n            Employee Name<span className=\"text text-danger\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"empName\"\r\n            placeholder=\"Your name goes here...\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"empID\" className=\"form-label\">\r\n            Employee ID<span className=\"text text-danger\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            className=\"form-control\"\r\n            id=\"empID\"\r\n            placeholder=\"Type Employee ID\"\r\n          />\r\n        </div>\r\n\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"dept\" className=\"form-label\">\r\n            Department<span className=\"text text-danger\">*</span>\r\n          </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            id=\"dept\"\r\n            placeholder=\"Type your department\"\r\n          />\r\n        </div>\r\n\r\n        \r\n        {\r\n          TraitData.map((trait)=>{return(            \r\n            <TraitRating traitData={trait} key={trait.ID} collectTraitRating={props.collectTraitRating} addRatingsData={addRatingsData}/>\r\n          )})\r\n        }\r\n        \r\n\r\n        <button type=\"submit\" className=\"btn btn-primary m-3\">Submit</button>\r\n        \r\n      </div>\r\n      </form>\r\n    );\r\n}\r\n","import React from 'react'\r\n\r\nexport const MainLanding = () => {\r\n    const pStyle = {\r\n        'textAlign': 'justify',\r\n        'textJustify': 'inter-word'\r\n      }\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"alert alert-primary\" role=\"alert\" style={pStyle}>\r\n        <p>A <b>360-degree feedback</b> (also known as <b>multi-rater feedback</b>, <b>multi source feedback</b>, or <b>multi source assessment</b>) is a process through which feedback from an employee's subordinates, colleagues, and supervisor(s), as well as a self-evaluation by the employee themselves is gathered. Such feedback can also include, when relevant, feedback from external sources who interact with the employee, such as customers and suppliers or other interested stakeholders. 360-degree feedback is so named because it solicits feedback regarding an employee's behavior from a variety of points of view (subordinate, lateral, and supervisory). It therefore may be contrasted with \"downward feedback\" (traditional feedback on work behavior and performance  delivered to subordinates by supervisory or management employees only; see traditional performance appraisal), or \"upward feedback\" delivered to supervisory or management employees by subordinates only.\r\n</p>\r\n<p>Organizations have most commonly utilized 360-degree feedback for developmental purposes, providing it to employees to assist them in developing work skills and behaviors.  However, organizations are increasingly using 360-degree feedback in performance evaluations and employment decisions (e.g., pay; promotions).  When 360-degree feedback is used for performance evaluation purposes, it is sometimes called a \"360-degree review\".\r\n</p>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n","import React, { Component } from 'react'\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport default class UploadTraits extends Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.selectedFile = null\r\n      this.traitsData = null\r\n      this.traitTable = null\r\n      this.readFile = this.readFile.bind(this)\r\n      \r\n      this.state = {\r\n        tableContent: [],\r\n        uploadBtnClick:0\r\n    };\r\n\r\n    \r\n    }\r\n\r\n    readFile(evt){\r\n      this.selectedFile = evt.target.files[0]['name']\r\n      \r\n      let f\r\n      f = evt.target.files[0]\r\n      const reader = new FileReader();\r\n      reader.onload = (evt) => { // evt = on_file_select event\r\n          /* Parse data */\r\n          const bstr = evt.target.result;\r\n          const wb = XLSX.read(bstr, {type:'binary'});\r\n          /* Get first worksheet */          \r\n          const wsname = wb.SheetNames[0];\r\n          const ws = wb.Sheets[wsname];\r\n          /* Convert array of arrays */\r\n          const data = XLSX.utils.sheet_to_json(ws);\r\n          /* Update state */\r\n          if (this.traitsData ===null) {\r\n            this.traitsData=data\r\n            \r\n          }\r\n      };\r\n      reader.readAsBinaryString(f);      \r\n    }\r\n    \r\n    uploadTraits(e){ \r\n      e.preventDefault()    \r\n      if (this.selectedFile===null){\r\n        alert('Please select file')        \r\n      }\r\n      else{        \r\n        this.setState({\r\n          tableContent: this.traitsData \r\n        });\r\n      }\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n      \r\n        return (\r\n          <div className=\"container\">\r\n            <div className=\"alert alert-primary\" role=\"alert\">\r\n              Please upload an excel file consisting <strong>Traits</strong> and\r\n              Its <strong>Definition</strong>. <br />\r\n              Data Configuaration should be as follows:\r\n                <ol>\r\n                    <li><strong>Trait Name</strong></li>\r\n                    <li><strong>Definition</strong></li>                    \r\n                </ol>\r\n            </div>\r\n           \r\n            <form className='form-inline'>\r\n            <div className=\"input-group mb-3\">              \r\n              <input\r\n                type=\"file\"\r\n                className=\"form-control\"\r\n                id=\"inputGroupFile02\"\r\n                accept=\".xlsx\"\r\n                \r\n                onChange={(e)=>{\r\n                  this.readFile(e)\r\n                }}\r\n              />\r\n              <button\r\n                className=\"input-group-text btn btn-primary\"\r\n                htmlFor=\"inputGroupFile02\"\r\n                onClick={(e)=>{\r\n                  this.uploadTraits(e)\r\n                }}\r\n              >\r\n                Upload\r\n              </button>\r\n            </div>\r\n            </form>\r\n            <table className=\"table\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\" width=\"10%\">\r\n                    #\r\n                  </th>\r\n                  <th scope=\"col\" width=\"30%\">\r\n                    Traits\r\n                  </th>\r\n                  <th scope=\"col\" width=\"70%\">\r\n                    Definition\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n              {\r\n                this.state.tableContent.length===0?\r\n                <tr>\r\n                <th scope=\"row\" colSpan=\"3\" className=\"text-center\" >{'No-Data'}</th>       \r\n              </tr> :\r\n                this.state.tableContent.map((e)=>\r\n                <tr key={e.__rowNum__}>\r\n                <th scope=\"row\" >{e.__rowNum__}</th>\r\n                <th scope=\"row\">{e.Traits}</th>\r\n                <td className=\"justify-text\">{e.Definition}</td>                  \r\n              </tr> \r\n                )\r\n              }\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport * as XLSX from 'xlsx';\r\n\r\nexport default class UploadCandidates extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.selectedFile = null\r\n        this.traitsData = null\r\n        this.traitTable = null\r\n        this.readFile = this.readFile.bind(this)\r\n        \r\n        this.state = {\r\n          tableContent: [],\r\n          uploadBtnClick:0\r\n      };\r\n  \r\n      \r\n      }\r\n  \r\n      readFile(evt){\r\n        this.selectedFile = evt.target.files[0]['name']\r\n        \r\n        let f\r\n        f = evt.target.files[0]\r\n        const reader = new FileReader();\r\n        reader.onload = (evt) => { // evt = on_file_select event\r\n            /* Parse data */\r\n            const bstr = evt.target.result;\r\n            const wb = XLSX.read(bstr, {type:'binary'});\r\n            /* Get first worksheet */          \r\n            const wsname = wb.SheetNames[0];\r\n            const ws = wb.Sheets[wsname];\r\n            /* Convert array of arrays */\r\n            const data = XLSX.utils.sheet_to_json(ws);\r\n            /* Update state */\r\n            if (this.traitsData ===null) {\r\n              this.traitsData=data\r\n              \r\n            }\r\n        };\r\n        reader.readAsBinaryString(f);      \r\n      }\r\n      \r\n      uploadTraits(e){ \r\n        e.preventDefault()    \r\n        if (this.selectedFile===null){\r\n          alert('Please select file')        \r\n        }\r\n        else{        \r\n          this.setState({\r\n            tableContent: this.traitsData \r\n          });\r\n        }\r\n  \r\n      }\r\n  \r\n      \r\n  \r\n      render() {\r\n        \r\n          return (\r\n            <div className=\"container\">\r\n              <div className=\"alert alert-primary\" role=\"alert\">\r\n                Please upload an excel file consisting <strong>Candidates</strong>, for whom you want to perform a 360° Survey.\r\n                Data Configuaration should be as follows:\r\n                <ol>\r\n                    <li><strong>Candidate's Name</strong></li>\r\n                    <li><strong>Job Role</strong></li>\r\n                    <li><strong>Company Name</strong></li>\r\n                    \r\n                </ol>\r\n              </div>\r\n             \r\n              <form className='form-inline'>\r\n              <div className=\"input-group mb-3\">              \r\n                <input\r\n                  type=\"file\"\r\n                  className=\"form-control\"\r\n                  id=\"inputGroupFile02\"\r\n                  accept=\".xlsx\"\r\n                  \r\n                  onChange={(e)=>{\r\n                    this.readFile(e)\r\n                  }}\r\n                />\r\n                <button\r\n                  className=\"input-group-text btn btn-primary\"\r\n                  htmlFor=\"inputGroupFile02\"\r\n                  onClick={(e)=>{\r\n                    this.uploadTraits(e)\r\n                  }}\r\n                >\r\n                  Upload\r\n                </button>\r\n              </div>\r\n              </form>\r\n              <table className=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th scope=\"col\" width=\"10%\">\r\n                      #\r\n                    </th>\r\n                    <th scope=\"col\" width=\"30%\">\r\n                        Candidate's Name\r\n                    </th>\r\n                    <th scope=\"col\" width=\"35%\">\r\n                        Job Role\r\n                    </th>\r\n                    <th scope=\"col\" width=\"35%\">\r\n                        Company Name\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                {\r\n                  this.state.tableContent.length===0?\r\n                  <tr>\r\n                  <th scope=\"row\" colSpan=\"4\" className=\"text-center\" >{'No-Data'}</th>       \r\n                </tr> :\r\n                  this.state.tableContent.map((e)=>\r\n                  <tr key={e.__rowNum__}>\r\n                  <th scope=\"row\" >{e.__rowNum__}</th>\r\n                  <th scope=\"row\">{e.Traits}</th>\r\n                  <td className=\"justify-text\">{e.Definition}</td>                  \r\n                </tr> \r\n                  )\r\n                }\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          );\r\n      }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class ManageSurvey extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                I am ManageSurvey\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\nimport { Header } from './AppComponents/HeaderComponent/Header';\nimport { Footer } from './AppComponents/FooterComponent/Footer';\nimport { SurveyComponent } from './AppComponents/SurveyComponents/SurveyComponent';\n\nimport { MainLanding } from './AppComponents/MainLanding/MainLanding';\nimport UploadTraits from './AppComponents/UploadTraits/UploadTraits';\nimport UploadCandidates from './AppComponents/UploadCandidates/UploadCandidates';\nimport ManageSurvey from './AppComponents/ManageSurvey/ManageSurvey';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\n\nfunction App() {\n  \n\n  return (\n    <>\n      <Router>\n        <Header/>\n        <Switch>\n          <Route exact path='/'>\n            <MainLanding/>\n          </Route>\n          <Route exact path='/uploadTraits'>\n            <UploadTraits/>\n          </Route>  \n          <Route exact path='/uploadCandidates'>\n            <UploadCandidates/>\n          </Route>  \n          <Route exact path='/manageSurvey'>\n            <ManageSurvey/>\n          </Route>\n          <Route exact path='/collectSurvey'>\n            <SurveyComponent/>\n          </Route>\n            \n        </Switch>\n        <Footer />\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}